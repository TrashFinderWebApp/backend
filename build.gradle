plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'WebProject'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/* bean validation */
	implementation 'javax.validation:validation-api:2.0.1.Final'

	/* mysql(maria DB로 변경 예정)*/
	implementation 'mysql:mysql-connector-java:8.0.32'

	/* jwt */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'

	implementation 'com.github.napstr:logback-discord-appender:1.0.0'
	implementation 'org.springframework:spring-webflux:6.1.5'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

processResources.dependsOn('copySecret')
processResources.dependsOn('copySecret2')

tasks.register('copySecret', Copy) {
	from 'backend_env/application.yml' // 서브모듈에 있는 환경변수 설정파일을 복사한다.
	into 'src/main/resources'
}

tasks.register('copySecret2', Copy) {
	from 'backend_env/yml/application-prod.yml'
	into 'src/main/resources/yml'

	from 'backend_env/yml/application-dev.yml'
	into 'src/main/resources/yml'
}

tasks.named('test') {
	useJUnitPlatform()
}